{"version":3,"file":"geoipform.bundle.js","sources":["../src/geoipform.js"],"sourcesContent":["export class Geoipform {\n    constructor() {\n        this.form = BX('geoip-form');\n        this.input = BX('geoip-form-input');\n        this.table = BX('geoip-result-table');\n        this.ipRegexp = new RegExp('^((25[0-5]|(2[0-4]|1\\\\d|[1-9]|)\\\\d)\\\\.?\\\\b){4}$');\n        this.warnMessage = this.form.querySelector('div.warn-message');\n        this.errorMessage = this.form.querySelector('div.error-message');\n        this.initHandlers();\n    }\n\n    initHandlers() {\n        BX.bind(this.form, 'submit', BX.proxy(this.processFormSubmit, this));\n    }\n\n\n    processFormSubmit(event) {\n        event.preventDefault();\n        const inputValue = this.input.value;\n\n        if (!this.ipRegexp.test(inputValue)) {\n            BX.removeClass(this.warnMessage, 'd-none');\n        } else {\n            BX.addClass(this.warnMessage, 'd-none');\n            this.sendRequest(inputValue);\n        }\n    }\n\n    sendRequest(userIp) {\n        BX.ajax.runComponentAction(\n            'felemixx.common:geoip.form',\n            'processFormData',\n            {\n                mode: 'class',\n                data: {\n                    userIp: userIp,\n                },\n\n            }\n        ).then(res => {\n            if (res.data.success) {\n                this.onSuccess(res.data.html);\n            } else {\n                this.onFail();\n            }\n        }).catch(console.error);\n    }\n\n    onSuccess(data) {\n        BX.addClass(this.errorMessage, 'd-none');\n        this.table.innerHTML = data;\n    }\n\n    onFail() {\n        BX.removeClass(this.errorMessage, 'd-none');\n    }\n}\n"],"names":["Geoipform","form","BX","input","table","ipRegexp","RegExp","warnMessage","querySelector","errorMessage","initHandlers","bind","proxy","processFormSubmit","event","preventDefault","inputValue","value","test","removeClass","addClass","sendRequest","userIp","ajax","runComponentAction","mode","data","then","res","success","onSuccess","html","onFail","console","error","innerHTML"],"mappings":";;;;;QAAaA,SAAS;MAClB,qBAAc;QAAA;QACV,IAAI,CAACC,IAAI,GAAGC,EAAE,CAAC,YAAY,CAAC;QAC5B,IAAI,CAACC,KAAK,GAAGD,EAAE,CAAC,kBAAkB,CAAC;QACnC,IAAI,CAACE,KAAK,GAAGF,EAAE,CAAC,oBAAoB,CAAC;QACrC,IAAI,CAACG,QAAQ,GAAG,IAAIC,MAAM,CAAC,iDAAiD,CAAC;QAC7E,IAAI,CAACC,WAAW,GAAG,IAAI,CAACN,IAAI,CAACO,aAAa,CAAC,kBAAkB,CAAC;QAC9D,IAAI,CAACC,YAAY,GAAG,IAAI,CAACR,IAAI,CAACO,aAAa,CAAC,mBAAmB,CAAC;QAChE,IAAI,CAACE,YAAY,EAAE;;MACtB;QAAA;QAAA,+BAEc;UACXR,EAAE,CAACS,IAAI,CAAC,IAAI,CAACV,IAAI,EAAE,QAAQ,EAAEC,EAAE,CAACU,KAAK,CAAC,IAAI,CAACC,iBAAiB,EAAE,IAAI,CAAC,CAAC;;;QACvE;QAAA,kCAGiBC,KAAK,EAAE;UACrBA,KAAK,CAACC,cAAc,EAAE;UACtB,IAAMC,UAAU,GAAG,IAAI,CAACb,KAAK,CAACc,KAAK;UAEnC,IAAI,CAAC,IAAI,CAACZ,QAAQ,CAACa,IAAI,CAACF,UAAU,CAAC,EAAE;YACjCd,EAAE,CAACiB,WAAW,CAAC,IAAI,CAACZ,WAAW,EAAE,QAAQ,CAAC;WAC7C,MAAM;YACHL,EAAE,CAACkB,QAAQ,CAAC,IAAI,CAACb,WAAW,EAAE,QAAQ,CAAC;YACvC,IAAI,CAACc,WAAW,CAACL,UAAU,CAAC;;;;QAEnC;QAAA,4BAEWM,MAAM,EAAE;UAAA;UAChBpB,EAAE,CAACqB,IAAI,CAACC,kBAAkB,CACtB,4BAA4B,EAC5B,iBAAiB,EACjB;YACIC,IAAI,EAAE,OAAO;YACbC,IAAI,EAAE;cACFJ,MAAM,EAAEA;;WAGf,CACJ,CAACK,IAAI,CAAC,UAAAC,GAAG,EAAI;YACV,IAAIA,GAAG,CAACF,IAAI,CAACG,OAAO,EAAE;cAClB,KAAI,CAACC,SAAS,CAACF,GAAG,CAACF,IAAI,CAACK,IAAI,CAAC;aAChC,MAAM;cACH,KAAI,CAACC,MAAM,EAAE;;WAEpB,CAAC,SAAM,CAACC,OAAO,CAACC,KAAK,CAAC;;;QAC1B;QAAA,0BAESR,IAAI,EAAE;UACZxB,EAAE,CAACkB,QAAQ,CAAC,IAAI,CAACX,YAAY,EAAE,QAAQ,CAAC;UACxC,IAAI,CAACL,KAAK,CAAC+B,SAAS,GAAGT,IAAI;;;QAC9B;QAAA,yBAEQ;UACLxB,EAAE,CAACiB,WAAW,CAAC,IAAI,CAACV,YAAY,EAAE,QAAQ,CAAC;;;MAC9C;IAAA;;;;;;;;"}
